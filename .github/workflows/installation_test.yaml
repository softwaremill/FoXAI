name: Installation test

on:
  workflow_dispatch:
    inputs:
      cuda_version:
        description: "Select CUDA version"
        required: true
        default: "11.6.2"
        type: choice
        options:
          - "11.0.3"
          - "11.2.2"
          - "11.4.3"
          - "11.6.2"
          - "11.8.0"
          - "12.0.0"
      python_version:
        description: "Select Python version"
        required: true
        default: "3.7"
        type: choice
        options:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

env:
  POETRY_VERSION: "1.3.2"
jobs:
  foxai:
    name: Launch GKE Pod with GPU
    runs-on: gpu-t4-pool
    container:
      image: nvidia/cuda:${{ inputs.cuda_version }}-runtime-ubuntu20.04 # https://gitlab.com/nvidia/container-images/cuda/-/tree/master/dist
      options: --cpus 2 --memory-reservation 8g --gpus all
      volumes:
        - /usr/local/nvidia/lib64:/usr/local/nvidia/lib64
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install system libs
        run: |
          apt-get update -y
          apt-get install -y libglib2.0-0 libx11-dev libxext-dev
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
          architecture: "x64"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        working-directory: .
        run: |
          poetry env use ${{ inputs.python_version }}
          poetry install

      - name: Launch code formatter
        working-directory: .
        run: poetry run black . --check --diff --color

      - name: Launch static type checker
        working-directory: .
        run: poetry run mypy -p autoxai --show-error-context --pretty --namespace-packages --explicit-package-bases --ignore-missing-imports

      - name: Launch tests
        working-directory: .
        run: poetry run pytest -v
